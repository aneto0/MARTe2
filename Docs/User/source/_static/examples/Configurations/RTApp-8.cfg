Parameters = {
    T1_FREQUENCY = (uint32)10000
    T2_FREQUENCY = (uint32)1
    SAMPLES = (uint32|"Parameters.T1_FREQUENCY / Parameters.T2_FREQUENCY")
}
$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMTimer = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = Timer
                    Type = uint32
                }
                Time = {
                    Frequency = (uint32|"Parameters.T1_FREQUENCY")
                    DataSource = Timer
                    Type = uint32
                }
            }
            OutputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }                
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }            
            }
        }
        +GAMFixed1 = {
            Class = FixedGAMExample1
            Gain = 2 
            InputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }
            }
            OutputSignals = {
                GainCounter = {
                    DataSource = DDB1
                    Type = uint32
                }                
            }
        }
        +GAMT1ToT2 = {
            Class = IOGAM            
            InputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }
                GainCounter = {
                    DataSource = DDB1
                    Type = uint32
                }
                State1_Thread1_CycleTime = {
                    Alias = State1.Thread1_CycleTime
                    DataSource = Timings
                    Type = uint32
                }
                GAMTimer_ReadTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMTimer_ExecTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMTimer_WriteTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMFixed1_ReadTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMFixed1_ExecTime = {
                    DataSource = Timings
                    Type = uint32
                }
                GAMFixed1_WriteTime = {
                    DataSource = Timings
                    Type = uint32
                }
            } 
            OutputSignals = {
                Counter = {
                    DataSource = RTThreadSynch 
                    Type = uint32
                }
                GainCounter = {
                    DataSource = RTThreadSynch 
                    Type = uint32
                }
                State1_Thread1_CycleTime = {
                    DataSource = RTThreadSynch 
                    Type = uint32
                }
                GAMTimer_ReadTime = {
                    DataSource = RTThreadSynch 
                    Type = uint32
                }
                GAMTimer_ExecTime = {
                    DataSource = RTThreadSynch 
                    Type = uint32
                }
                GAMTimer_WriteTime = {
                    DataSource = RTThreadSynch 
                    Type = uint32
                }
                GAMFixed1_ReadTime = {
                    DataSource = RTThreadSynch 
                    Type = uint32
                }
                GAMFixed1_ExecTime = {
                    DataSource = RTThreadSynch 
                    Type = uint32
                }
                GAMFixed1_WriteTime = {
                    DataSource = RTThreadSynch 
                    Type = uint32
                }
            }
        }
        +GAMT2FromT1 = {
            Class = IOGAM            
            InputSignals = {
                Counter = {
                    DataSource = RTThreadSynch
                    Samples = (uint32|"Parameters.SAMPLES")
                    Type = uint32
                }
                GainCounter = {
                    DataSource = RTThreadSynch
                    Samples = (uint32|"Parameters.SAMPLES")
                    Type = uint32
                }
                State1_Thread1_CycleTime = {
                    DataSource = RTThreadSynch
                    Samples = (uint32|"Parameters.SAMPLES")
                    Type = uint32
                }
                GAMTimer_ReadTime = {
                    DataSource = RTThreadSynch
                    Samples = (uint32|"Parameters.SAMPLES")
                    Type = uint32
                }
                GAMTimer_ExecTime = {
                    DataSource = RTThreadSynch
                    Samples = (uint32|"Parameters.SAMPLES")
                    Type = uint32
                }
                GAMTimer_WriteTime = {
                    DataSource = RTThreadSynch
                    Samples = (uint32|"Parameters.SAMPLES")
                    Type = uint32
                }
                GAMFixed1_ReadTime = {
                    DataSource = RTThreadSynch
                    Samples = (uint32|"Parameters.SAMPLES")
                    Type = uint32
                }
                GAMFixed1_ExecTime = {
                    DataSource = RTThreadSynch
                    Samples = (uint32|"Parameters.SAMPLES")
                    Type = uint32
                }
                GAMFixed1_WriteTime = {
                    DataSource = RTThreadSynch
                    Samples = (uint32|"Parameters.SAMPLES")
                    Type = uint32
                }
            } 
            OutputSignals = {
                Counter = {
                    DataSource = DDB2
                    NumberOfElements = 10000
                    Type = uint32
                }
                GainCounter = {
                    DataSource = DDB2
                    NumberOfElements = 10000
                    Type = uint32
                }
                State1_Thread1_CycleTime = {
                    DataSource = DDB2
                    NumberOfElements = 10000
                    Type = uint32
                }
                GAMTimer_ReadTime = {
                    DataSource = DDB2
                    NumberOfElements = 10000
                    Type = uint32
                }
                GAMTimer_ExecTime = {
                    DataSource = DDB2
                    NumberOfElements = 10000
                    Type = uint32
                }
                GAMTimer_WriteTime = {
                    DataSource = DDB2
                    NumberOfElements = 10000
                    Type = uint32
                }
                GAMFixed1_ReadTime = {
                    DataSource = DDB2
                    NumberOfElements = 10000
                    Type = uint32
                }
                GAMFixed1_ExecTime = {
                    DataSource = DDB2
                    NumberOfElements = 10000
                    Type = uint32
                }
                GAMFixed1_WriteTime = {
                    DataSource = DDB2
                    NumberOfElements = 10000
                    Type = uint32
                }
            }
        }
        +GAMDisplay = {
            Class = IOGAM            
            InputSignals = {
                Counter = {
                    DataSource = DDB2
                    Ranges = {{0, 10}}
                    Type = uint32
                }
                GainCounter = {
                    DataSource = DDB2
                    Ranges = {{0, 10}}
                    Type = uint32
                }
                State1_Thread1_CycleTime = {
                    DataSource = DDB2 
                    Ranges = {{0, 10}}
                    Type = uint32
                }
                GAMTimer_ReadTime = {
                    DataSource = DDB2 
                    Ranges = {{0, 10}}
                    Type = uint32
                }
                GAMTimer_ExecTime = {
                    DataSource = DDB2 
                    Ranges = {{0, 10}}
                    Type = uint32
                }
                GAMTimer_WriteTime = {
                    DataSource = DDB2 
                    Ranges = {{0, 10}}
                    Type = uint32
                }
                GAMFixed1_ReadTime = {
                    DataSource = DDB2 
                    Ranges = {{0, 10}}
                    Type = uint32
                }
                GAMFixed1_ExecTime = {
                    DataSource = DDB2 
                    Ranges = {{0, 10}}
                    Type = uint32
                }
                GAMFixed1_WriteTime = {
                    DataSource = DDB2 
                    Ranges = {{0, 10}}
                    Type = uint32
                }
            } 
            OutputSignals = {
                Counter = {
                    DataSource = LoggerDataSource
                    NumberOfElements = 11
                    Type = uint32
                }
                GainCounter = {
                    DataSource = LoggerDataSource
                    NumberOfElements = 11
                    Type = uint32
                }
                State1_Thread1_CycleTime = {
                    DataSource = LoggerDataSource
                    NumberOfElements = 11
                    Type = uint32
                }
                GAMTimer_ReadTime = {
                    DataSource = LoggerDataSource
                    NumberOfElements = 11
                    Type = uint32
                }
                GAMTimer_ExecTime = {
                    DataSource = LoggerDataSource
                    NumberOfElements = 11
                    Type = uint32
                }
                GAMTimer_WriteTime = {
                    DataSource = LoggerDataSource
                    NumberOfElements = 11
                    Type = uint32
                }
                GAMFixed1_ReadTime = {
                    DataSource = LoggerDataSource
                    NumberOfElements = 11
                    Type = uint32
                }
                GAMFixed1_ExecTime = {
                    DataSource = LoggerDataSource
                    NumberOfElements = 11
                    Type = uint32
                }
                GAMFixed1_WriteTime = {
                    DataSource = LoggerDataSource
                    NumberOfElements = 11
                    Type = uint32
                }
            }
        }
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB2
        +DDB1 = {
            Class = GAMDataSource
       	}        
        +DDB2 = {
            Class = GAMDataSource
       	}        
        +LoggerDataSource = {
            Class = LoggerDataSource
        }
        +RTThreadSynch = {
            Class = RealTimeThreadSynchronisation
            Timeout = 10000 //Timeout in ms to wait for the thread to cycle.
        }
        +Timings = {
            Class = TimingDataSource
        }
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Default"
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }        
    }
    +States = {
        Class = ReferenceContainer
        +State1 = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x2
                    Functions = {GAMTimer GAMFixed1 GAMT1ToT2}
                }
                +Thread2 = {
                    Class = RealTimeThread
                    CPUs = 0x1
                    Functions = {GAMT2FromT1 GAMDisplay}
                }

            }
        }        
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
